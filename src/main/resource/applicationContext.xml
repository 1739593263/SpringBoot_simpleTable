<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx.xsd">

        <context:component-scan base-package="com.ssm">
            <!-- 除controller以外都扫描 -->
            <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        </context:component-scan>

        <!-- 配置数据源，书屋管理。。。 -->
        <bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
            <property name="driverClass" value="com.mysql.jdbc.Driver"/>
            <property name="jdbcUrl" value="jdbc:mysql://10.0.0.236:3306/test?characterEncoding=utf-8"/>
            <property name="user" value="root"/>
            <property name="password" value="159844569"/>
        </bean>

        <!-- 配合Mybatis整合 -->
        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
            <property name="dataSource" ref="pooledDataSource"/>
            <!-- 设置mybatis配置文件位置 -->
            <property name="configLocation" value="classpath:mybatisMapping.xml"></property>
            <!-- 指定mybatis文件的mapper文件地址 com.ssm.Dao/*.xml-->
            <property name="mapperLocations" value="classpath*:com.ssm.Dao/*.xml"/>
        </bean>

        <!-- 配置扫描器，将mybatis接口实现加入到ioc容器中 -->
        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
            <!-- 扫描所有Dao接口实现，加入到mybatis中 -->
            <property name="basePackage" value="com.ssm.Dao"></property>
        </bean>

        <!-- 设置一个可批量执行的sqlSession -->
        <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
            <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
            <!-- pageHelper -->
            <constructor-arg name="executorType" value="BATCH"></constructor-arg>
        </bean>


    <!-- ============================================================================== -->
        <!-- 事务控制配置： -->
        <bean id="transationManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
            <!-- 控制住数据源 -->
            <property name="dataSource" ref="pooledDataSource"></property>
        </bean>

        <!-- 事务增强，给事务切入制定规则 -->
        <tx:advice id="Advice" transaction-manager="transationManager">
            <tx:attributes>
                <!-- 所有方法都是事务方法 -->
                <tx:method name="*"/>
                <!-- example：以“get”开始的所有方法都是只读模式 -->
                <tx:method name="get*" read-only="true"/>
            </tx:attributes>
        </tx:advice>

        <!-- 开启基于注解的事务，使用xml配置形式的事务 -->
        <aop:config>
            <aop:pointcut expression="execution(* com.ssm.service..*(..))" id="pointcut"></aop:pointcut>
            <!-- 配置事物的规则和切入点 -->
            <aop:advisor advice-ref="Advice" pointcut-ref="pointcut"></aop:advisor>
        </aop:config>
</beans>